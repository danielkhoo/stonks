{"version":3,"sources":["Entry.js","App.js","index.js"],"names":["Entry","props","data","ticker","price","qty","fx","cost","value","Math","round","profit","className","onClick","onDelete","index","onChange","event","onEdit","target","toFixed","App","apiKeyInput","useRef","useState","entries","setEntries","useEffect","getLatestPrices","a","async","getTicker","key","localStorage","getItem","axios","get","res","entriesCopy","JSON","parse","length","Promise","all","map","entry","catch","updatedEntries","editedEntry","newEntries","setItem","stringify","slice","totalVal","reduce","acc","cur","totalCost","totalProfit","ref","console","log","current","id","src","process","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e021b775.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Entry(props) {\n  const { ticker, price, qty, fx, cost } = props.data;\n  const value = Math.round(price * qty * fx);\n  const profit = Math.round(price * qty * fx - cost);\n\n  const onDelete = () => props.onDelete(props.index);\n  return (\n    <div className='entry-row'>\n      <div className='entry-btn-col'>\n        <button className='entry-btn' onClick={onDelete}>\n          -\n        </button>\n      </div>\n      <div className='entry-col'>\n        <input\n          className='entry-input'\n          onChange={event => props.onEdit(props.index, { ...props.data, ticker: event.target.value })}\n          value={ticker}\n        />\n      </div>\n\n      <div className='entry-col'>\n        <input\n          className='entry-input bold'\n          onChange={event => props.onEdit(props.index, { ...props.data, price: event.target.value })}\n          value={price}\n        />\n      </div>\n      <div className='entry-col'>\n        <input\n          className='entry-input'\n          onChange={event => props.onEdit(props.index, { ...props.data, qty: event.target.value })}\n          value={qty}\n        />\n      </div>\n      <div className='entry-col'>\n        <input\n          className='entry-input'\n          onChange={event => props.onEdit(props.index, { ...props.data, fx: event.target.value })}\n          value={fx}\n        />\n      </div>\n      <div className='entry-col'>{value}</div>\n      <div className='entry-col'>\n        <input\n          className='entry-input'\n          onChange={event => props.onEdit(props.index, { ...props.data, cost: event.target.value })}\n          value={cost}\n        />\n      </div>\n      <div className={profit < 0 ? 'entry-col-2 loss' : 'entry-col-2 gain'}>\n        {profit + '(' + ((profit * 100) / cost).toFixed(2) + '%)'}\n      </div>\n    </div>\n  );\n}\n\nexport default Entry;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Entry from './Entry';\nimport axios from 'axios';\n\nfunction App() {\n  let apiKeyInput = useRef();\n  const [entries, setEntries] = useState([]);\n\n  useEffect(() => {\n    getLatestPrices();\n  }, []);\n\n  const getLatestPrices = async () => {\n    const getTicker = async ticker => {\n      const key = localStorage.getItem('key');\n      const res = await axios.get(\n        `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${ticker}&apikey=${key}`\n      );\n      return +res.data['Global Quote']['05. price'];\n    };\n\n    const entriesCopy = JSON.parse(localStorage.getItem('data'));\n    if (entriesCopy && entriesCopy.length > 0) {\n      const updatedEntries = await Promise.all(\n        entriesCopy.map(async entry => {\n          const price = await getTicker(entry.ticker).catch(() => entry.price);\n          // const price = entry.price;\n          return { ...entry, price: price };\n        })\n      );\n      setEntries(updatedEntries);\n    }\n  };\n\n  const onAdd = () => {\n    console.log(entries);\n    setEntries([...entries, {}]);\n  };\n\n  const onEdit = (index, editedEntry) => {\n    const newEntries = [...entries];\n    newEntries[index] = editedEntry;\n    setEntries(newEntries);\n    localStorage.setItem('data', JSON.stringify(newEntries));\n  };\n\n  const onDelete = index => {\n    const newEntries = [...entries.slice(0, index), ...entries.slice(index + 1)];\n    setEntries(newEntries);\n    localStorage.setItem('data', JSON.stringify(newEntries));\n  };\n\n  const addAPIKey = event => {\n    console.log(apiKeyInput.current.value);\n    localStorage.setItem('key', apiKeyInput.current.value);\n    apiKeyInput.current.value = '';\n  };\n\n  const totalVal =\n    entries.length > 0\n      ? entries.map(entry => Math.round(entry.price * entry.qty * entry.fx)).reduce((acc, cur) => (acc += cur))\n      : 0;\n  const totalCost = entries.length > 0 ? entries.map(entry => +entry.cost).reduce((acc, cur) => (acc += cur)) : 0;\n  const totalProfit =\n    entries.length > 0\n      ? entries\n          .map(entry => Math.round(entry.price * entry.qty * entry.fx - entry.cost))\n          .reduce((acc, cur) => (acc += cur))\n      : 0;\n  return (\n    <div className='App'>\n      <header className='Header'>\n        <h1>STONKS</h1>\n        <div>\n          <input ref={apiKeyInput} />\n          <button onClick={addAPIKey}>Save</button>\n        </div>\n\n        <img\n          id='meme'\n          src={process.env.PUBLIC_URL + `/${totalProfit < 0 ? 'notStonks.jpg' : 'stonks.png'}`}\n          width='400px'\n        ></img>\n      </header>\n      <main>\n        <div className='entry-row'>\n          <div className='entry-btn-col'></div>\n          <div className='entry-col'>Ticker</div>\n          <div className='entry-col'>Price</div>\n          <div className='entry-col'>Qty</div>\n          <div className='entry-col'>FX</div>\n          <div className='entry-col'>Value</div>\n          <div className='entry-col'>Cost</div>\n          <div className='entry-col-2'>Profit</div>\n        </div>\n        {entries.length > 0 &&\n          entries.map((data, index) => (\n            <Entry index={index} data={data} onEdit={onEdit} onDelete={onDelete} key={index} />\n          ))}\n        <div className='entry-row'>\n          <div className='entry-btn-col'></div>\n          <div className='entry-col'></div>\n          <div className='entry-col'></div>\n          <div className='entry-col'></div>\n          <div className='entry-col'>\n            <button className='entry-btn' onClick={onAdd}>\n              Add ticker\n            </button>\n          </div>\n          <div className='entry-col'></div>\n          <div className='entry-col'></div>\n          <div className='entry-col-2'></div>\n        </div>\n        <div className='entry-row'>\n          <div className='entry-btn-col'></div>\n          <div className='entry-col'></div>\n          <div className='entry-col'></div>\n          <div className='entry-col'></div>\n          <div className='entry-col'></div>\n          <div className='entry-col'>{totalVal}</div>\n          <div className='entry-col'>{totalCost}</div>\n          <div className={totalProfit < 0 ? 'entry-col-2 loss' : 'entry-col-2 gain'}>\n            {totalProfit + '(' + ((totalProfit * 100) / totalCost).toFixed(2) + '%)'}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}